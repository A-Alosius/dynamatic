// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: dynamatic-opt --push-constants %s --split-input-file | FileCheck %s

// CHECK-LABEL:   func.func @doNothing(
// CHECK-SAME:                         %[[VAL_0:.*]]: i1) {
// CHECK:           cf.cond_br %[[VAL_0]], ^bb1, ^bb2
// CHECK:         ^bb1:
// CHECK:           return
// CHECK:         ^bb2:
// CHECK:           return
// CHECK:         }
func.func @doNothing(%arg0: i1) {
  %c0 = arith.constant 0 : i32
  cf.cond_br %arg0, ^bb1, ^bb2
^bb1:
  %c1 = arith.constant 1 : i32
  return
^bb2:
  %c2 = arith.constant 2 : i32
  return
}

// -----

// CHECK-LABEL:   func.func @simplePush(
// CHECK-SAME:                          %[[VAL_0:.*]]: i1) -> i32 {
// CHECK:           cf.cond_br %[[VAL_0]], ^bb1, ^bb2
// CHECK:         ^bb1:
// CHECK:           %[[VAL_1:.*]] = arith.constant 0 : i32
// CHECK:           return %[[VAL_1]] : i32
// CHECK:         ^bb2:
// CHECK:           %[[VAL_2:.*]] = arith.constant 1 : i32
// CHECK:           return %[[VAL_2]] : i32
// CHECK:         }
func.func @simplePush(%arg0: i1) -> i32 {
  %c0 = arith.constant 0 : i32
  %c1 = arith.constant 1 : i32  
  cf.cond_br %arg0, ^bb1, ^bb2
^bb1:
  return %c0 : i32
^bb2:
  return %c1 : i32
}

// -----

// CHECK-LABEL:   func.func @deleteOriginal(
// CHECK-SAME:                              %[[VAL_0:.*]]: i1) -> i32 {
// CHECK:           cf.cond_br %[[VAL_0]], ^bb1, ^bb2
// CHECK:         ^bb1:
// CHECK:           %[[VAL_1:.*]] = arith.constant 0 : i32
// CHECK:           return %[[VAL_1]] : i32
// CHECK:         ^bb2:
// CHECK:           %[[VAL_2:.*]] = arith.constant 1 : i32
// CHECK:           return %[[VAL_2]] : i32
// CHECK:         }
func.func @deleteOriginal(%arg0: i1) -> i32 {
  %c0 = arith.constant 0 : i32
  %c1 = arith.constant 1 : i32
  cf.cond_br %arg0, ^bb1, ^bb2
^bb1:
  return %c0 : i32
^bb2:
  return %c1 : i32
}

